{"version":3,"sources":["Login-Page.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","state","username","password","error","handlePassChange","bind","handleUserChange","handleSubmit","dismissError","this","setState","evt","preventDefault","axios","method","url","data","userName","headers","then","response","console","log","toString","target","value","className","onSubmit","type","data-test","onChange","onClick","Component","App","props","body","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAyGeA,E,kDAnGX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,SAAU,GACVC,SAAU,GACVC,MAAO,IAGX,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBAXV,E,gDAcd,WACII,KAAKC,SAAS,CAAEP,MAAO,O,0BAG3B,SAAaQ,GAAM,IAAD,OAGd,OAFAA,EAAIC,iBAECH,KAAKT,MAAMC,SAIXQ,KAAKT,MAAME,UAIhBW,IAAM,CACFC,OAAQ,OACRC,IAAK,8BACLC,KAAM,CACFC,SAAU,OACVf,SAAU,YAIdgB,QAAS,KACVC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASJ,MACrB,EAAKN,SAAS,CAACP,MAAOiB,EAASJ,KAAKO,qBAGxCV,IAAM,CACFC,OAAQ,MACRC,IAAK,8BACLG,QAAS,KACVC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASJ,MACrB,EAAKN,SAAS,CAACP,MAAOiB,EAASJ,KAAKO,iBAxB7Bd,KAAKC,SAAS,CAAEP,MAAO,yBAJvBM,KAAKC,SAAS,CAAEP,MAAO,2B,8BAiCtC,SAAiBQ,GACbF,KAAKC,SAAS,CACVT,SAAUU,EAAIa,OAAOC,U,8BAI7B,SAAiBd,GACbF,KAAKC,SAAS,CACVR,SAAUS,EAAIa,OAAOC,U,oBAI7B,WACI,OACI,qBAAKC,UAAU,QAAf,SACI,uBAAMC,SAAUlB,KAAKF,aAArB,UACI,gCACI,kCACI,+BACI,6BAAI,kDACJ,6BAAI,uBAAOqB,KAAK,OAAOC,YAAU,WAAWJ,MAAOhB,KAAKT,MAAMC,SAAU6B,SAAUrB,KAAKH,wBAE3F,+BACI,6BAAI,iDACJ,6BAAI,uBAAOsB,KAAK,WAAWC,YAAU,WAAWJ,MAAOhB,KAAKT,MAAME,SAAU4B,SAAUrB,KAAKL,6BAMnGK,KAAKT,MAAMG,OACX,qBAAI0B,YAAU,QAAQE,QAAStB,KAAKD,aAApC,UACI,wBAAQuB,QAAStB,KAAKD,aAAtB,oBACCC,KAAKT,MAAMG,SAIpB,uBAAOyB,KAAK,SAASH,MAAM,SAASI,YAAU,oB,GA7F1CG,aCgBTC,E,kDAjBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDlC,MAAQ,CACXmC,KAAM,SAHS,E,0CAOnB,WACE,OACI,8BACE,cAAC,EAAD,U,GAXQC,IAAMJ,WCSTK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a14076d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\n\r\n\r\nclass LoginPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: '',\r\n        };\r\n\r\n        this.handlePassChange = this.handlePassChange.bind(this);\r\n        this.handleUserChange = this.handleUserChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.dismissError = this.dismissError.bind(this);\r\n    }\r\n\r\n    dismissError() {\r\n        this.setState({ error: '' });\r\n    }\r\n\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        if (!this.state.username) {\r\n            return this.setState({ error: 'Username is required' });\r\n        }\r\n\r\n        if (!this.state.password) {\r\n            return this.setState({ error: 'Password is required' });\r\n        }\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8080/login',\r\n            data: {\r\n                userName: 'Liam',\r\n                password: 'pwd12345'\r\n            },\r\n            // credentials: 'include',\r\n            // headers: {\"Access-Control-Allow-Origin\": \"*\", \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\", \"Access-Control-Allow-Credentials\": \"true\", \"Access-Control-Allow-Methodes\": \"POST, GET, OPTIONS, DELETE\"},\r\n            headers: ''\r\n        }).then(response => {\r\n            console.log(response.data)\r\n            this.setState({error: response.data.toString()})\r\n        });\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:8080/hallo',\r\n            headers: '',\r\n        }).then(response => {\r\n            console.log(response.data)\r\n            this.setState({error: response.data.toString()})\r\n        });\r\n\r\n    }\r\n\r\n    handleUserChange(evt) {\r\n        this.setState({\r\n            username: evt.target.value,\r\n        });\r\n    };\r\n\r\n    handlePassChange(evt) {\r\n        this.setState({\r\n            password: evt.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><label>User Name: </label></td>\r\n                                <td><input type=\"text\" data-test=\"username\" value={this.state.username} onChange={this.handleUserChange} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><label>Password: </label></td>\r\n                                <td><input type=\"password\" data-test=\"password\" value={this.state.password} onChange={this.handlePassChange} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    {\r\n                        this.state.error &&\r\n                        <h3 data-test=\"error\" onClick={this.dismissError}>\r\n                            <button onClick={this.dismissError}>âœ–</button>\r\n                            {this.state.error}\r\n                        </h3>\r\n                    }\r\n\r\n                    <input type=\"submit\" value=\"Log In\" data-test=\"submit\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\nimport LoginPage from \"./Login-Page\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      body: \"hallo\"\n    };\n  }\n\n  render() {\n    return (\n        <div>\n          <LoginPage />\n        </div>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}